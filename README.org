#+STARTUP: all
#+DATE: Time-stamp: <2020-02-12>
#+bind: org-html-preamble-format (("en" "%d"))
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil prop:nil
#+OPTIONS: stat:t tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t
#+AUTHOR: H. Dieter Wilhelm
#+EMAIL: dieter@duenenhof-wilhelm.de
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport

#+OPTIONS: html-link-use-abs-url:nil html-postamble:t html-preamble:t
#+OPTIONS: html-scripts:t html-style:t html5-fancy:nil tex:t
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+HTML_LINK_HOME: https://github.com/dieter-wilhelm/apdl-mode
#+HTML_LINK_UP: index.html
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+HTML_MATHJAX:
#+INFOJS_OPT:
#+LATEX_HEADER:

#+title: APDL-Mode
The GNU-Emacs major mode for the programming language APDL

Copyright (C) 2006 - 2020  H. Dieter Wilhelm, GPL V3

file:doc/ansys+emacs2020.png]]

* Introduction
  APDL (ANSYS Parametric Design Language) is the solver scripting
  language of the FEA (Finite Element Analysis) suite [[http://www.ansys.com][ANSYS]] (ANalysis
  SYStem, registered TM).

  APDL-Mode (formerly ANSYS-Mode) represents, in conjunction with the
  GNU-Emacs editor, an advanced APDL environment with features like
  solver communication (GNU-Linux only), license reporting, keyword
  completion, code templates, dedicated keybindings, etc.  Over the
  years it has accumulated lots of features for writing and debugging
  FEA models in APDL code. Please convince yourself with the APDL-Mode
  in-depth documentation.

  With the advent of the modern ANSYS GUIs - like `WorkBench' or
  `AIM' - the usage of APDL as a wholesale modelling language has
  diminished.  But APDL is here to stay: `WorkBench' and `AIM' operate
  exclusively the ANSYS solver with it!  They are sending APDL input
  (.dat) files to the solver.  For a true understanding of the GUIs'
  inner workings a study of their APDL code is prerequisite.

  On the other hand GUIs are not supporting all solver features.  So
  APDL `Command Snippets' enhance the GUIs' modelling capabilities.
* Some highlights
  Nowadays I find APDL-Mode mostly useful in writing these `Command
  Snippets' or reading snippets from others.  For in-depth
  investigations APDL-Mode is very convenient to study the solver (.dat)
  files.
** In-built APDL command help with argument counter
   Especially for commands with a large number of arguments it is
   cumbersome to count the arguments, *C-?* facilitates this for you
   and visualises dynamically at which parameter position your cursor
   currently is.

   [[file:doc/parameter_help2.png]]

** Pin-pointing to the relevant ANSYS documentation entry
   Without searching you can directly trigger the relevant ANSYS
   manual entry for your APDL commands or element names, among other
   subjects.  The help entry is shown in a web browser.  (To that end
   you must have installed the local ANSYS documentation and
   configured APDL-Mode as well.)

** Code outlining for inspecting WorkBench solver (.dat) files
   APDL-Mode hides the normally uninteresting but usually very large
   number blocks.
   #+ATTR_LaTeX: :height 7.5cm
   [[file:doc/hidden_blocks.png]]
   The image below shows the unhidden content.
   #+ATTR_LaTeX: :height 7.5cm
   [[file:doc/unhidden_blocks.png]]
** Highlighting example
   The image shows an Emacs 23.2 frame (in reversed colour mode and
   compiled with the GTK+ toolkit under GNU-Linux) with a ripped off
   APDL-Mode menu field

   [[file:doc/ansys-mode.jpg]]
* Requirements and installation
#  - APDL-Mode is now available on MELPA
#  For further installation options
   Please have a look in the [[file:INSTALLATION.org][INSTALLATION]] file.
* Usage

  Please type `M-x apdl-mode' and check out the menu bar's `ANSYS'
  entry for its possibilities and select the entry `Describe
  APDL-Mode' or type "C-h m" (i. e. the <CTRL> key together with the
  <h> key and subsequently the <m> key), which will display the
  apdl-mode help which is your `online' guide for its usage, and
  key-bindings.

  I suggest you have a look into the introductory tutorial
  [[file:doc/A-M_introductory_tutorial.org][A-M_introductory_tutorial.org]].

* Configuration and Customisation
  Please read the file [[file:apdl-config.org][apdl-config.org]], for your convenience APDL-Mode
  provides also an customisation example [[file:ansys-config.el][apdl-config.el]].
* News
  Please have a look in the [[file:NEWS.org][NEWS]] file
* License and Acknowledgements
  - GPL 3 - see the [[file:LICENSE.org][LICENSE]] file

  Acknowledgements to Tim Read and Geoff Foster for their ansys-mod.el
  from 1997 which triggered the idea in 2006 to start apdl-mode.

  Parts of APDL-Mode were base on octave-mod.el: Copyright (C) 1997
  Free Software Foundation, Inc.  Author: Kurt Hornik
  <Kurt.Hornik@wu-wien.ac.at> Author: John Eaton
  <jwe@bevo.che.wisc.edu>

* Further Resources
** APDL-Mode
   - The complete [[http://dieter-wilhelm.github.io/apdl-mode][documentation of APDL-Mode]] is available online
   - The [[https://github.com/dieter-wilhelm/apdl-mode][GitHub page of APDL-Mode]]
** APDL Editor Resources
   - A free Windows [[http://apdl.de][APDL editor]], site not maintained since 2011
   - A commercial competitor of apdl-mode: The [[http://www.padtinc.com/pedal][Pedal]] script editor for
     Windows, project disbanded in 2015.
   - Simple APDL syntax highlighting extensions are available for
     various editors, gvim, nedit, ... to name a few, please have a
     look at [[http://ansys.net][ANSYS.net]].

   - [[http://emacs.stackexchange.com][Stackexchange]], the question and answer site.
   - [[http://www.emacswiki.org][EmacsWiki]], an encyclopedia for GNU-Emacs
** ANSYS and APDL Resources
   - ANSYS manuals in the first place
   - The [[http://www.ansys.com][ANSYS homepage]] with their ANSYS Portal and Learning Hub
   - Xansys, an [[http://www.xansys.org][ANSYS online community]] (forum registration is necessary)
   - A general  ANSYS repository [[http://www.ansys.net][ANSYS.net]]
   - [[http://www.auc-ev.de/][AUC]], the ANSYS User Club eV. in Germany

-----

# The following is for Emacs
# local variables:
# word-wrap: t
# show-trailing-whitespace: t
# indicate-empty-lines: t
# time-stamp-active: t
# time-stamp-format: "%:y-%02m-%02d"
# end:
