#+STARTUP: all
#+DATE: Time-stamp: <2020-02-17>
#+bind: org-html-preamble-format (("en" "%d"))
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil prop:nil
#+OPTIONS: stat:t tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t
#+AUTHOR: H. Dieter Wilhelm
#+EMAIL: dieter@duenenhof-wilhelm.de
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport

#+OPTIONS: html-link-use-abs-url:nil html-postamble:t html-preamble:t
#+OPTIONS: html-scripts:t html-style:t html5-fancy:nil tex:t
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+HTML_LINK_HOME: https://github.com/dieter-wilhelm/apdl-mode
#+HTML_LINK_UP: index.html
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+HTML_MATHJAX:
#+INFOJS_OPT:
#+LATEX_HEADER:

#+title: APDL-Mode
The GNU-Emacs major mode for the programming language APDL

Copyright (C) 2006 - 2020  H. Dieter Wilhelm, GPL V3

[[file:doc/ansys+emacs2020.png]]

* Introduction
  APDL (ANSYS Parametric Design Language) is the solver scripting
  language of the FEA (Finite Element Analysis) suite [[http://www.ansys.com][ANSYS]] (ANalysis
  SYStem, registered TM).

  APDL-Mode (formerly ANSYS-Mode) represents, in conjunction with the
  GNU-Emacs editor, an advanced APDL environment with features like,
  pin-pointing the APDL reference documentation, keyword completion,
  code templates, dedicated keybindings, solver communication
  (GNU-Linux only), license reporting, etc.  Over the years it has
  accumulated lots of features for writing and debugging FEA models in
  APDL code. Please convince yourself with the APDL-Mode in-depth
  documentation.

  With the advent of the modern ANSYS GUIs - like `WorkBench' or
  `AIM' - the usage of APDL as a wholesale modelling language has
  diminished.  But APDL is here to stay: `WorkBench' and `AIM' operate
  exclusively the ANSYS solver with it!  They are sending APDL input
  (.dat) files to the solver.  For a true understanding of the GUIs'
  inner workings a study of APDL code is prerequisite.

  Moreover the GUIs are not supporting all solver features.  So APDL
  `Command Snippets' enhance the GUIs' modelling capabilities.
* Some Highlights
  Nowadays I find APDL-Mode mostly useful in writing `Command
  Snippets' and inspecting longer snippets from other sources.
  Likewise for studying solver (.dat) files which were created by
  WorkBench.  Alone APDL-Mode's support for rapidly accessing the
  ANSYS APDL documentation is worth using it.
** In-built APDL command help with argument counter
   Especially for commands with a large number of arguments it is
   cumbersome to count the arguments, *C-?* facilitates this for you
   and visualises dynamically at which parameter position your cursor
   currently is.

   [[file:doc/parameter_help2.png]]

** Pin-pointing the relevant ANSYS documentation
   You can trigger (*C-c C-b*) the relevant manual entry directly from
   your APDL session without the detour of searching in the ANSYS Help
   Viewer or waiting for the ANSYS online help.  This works not only
   for APDL commands but also element names and other manual
   topics. (To that end you must have installed the local ANSYS
   documentation and configured APDL-Mode.)  The topics are shown in a
   web browser.

   The image below is showing a manual entry in GNU-Emacs's EWW
   browser. You are able to consult the manual side-by-side with your
   APDL code.

   # #+caption: Browsing the manual in a web browser (here with EWW in GNU-Emacs).
   [[file:doc/browse_manual.png]]

** Code outlining for inspecting WorkBench solver (.dat) files
   APDL-Mode hides the normally uninteresting but usually very large
   number blocks.
   #+ATTR_LaTeX: :height 7.5cm
   [[file:doc/hidden_blocks.png]]
   The image below shows the unhidden content.
   #+ATTR_LaTeX: :height 7.5cm
   [[file:doc/unhidden_blocks.png]]
** Highlighting example
   The image shows an Emacs 23.2 frame (in reversed colour mode and
   compiled with the GTK+ toolkit under GNU-Linux) with a ripped off
   APDL-Mode menu field

   [[file:doc/ansys-mode.jpg]]
* Installation
#  - APDL-Mode is now available on MELPA
#  For further installation options

1) Install [[https://www.gnu.org/software/emacs/][GNU-Emacs]] (if you are new to this editor please check the
   tutorial in its `Help' menu, please really do it ;-).

2) Download APDL-Mode's tar file from the [[https://github.com/dieter-wilhelm/apdl-mode/releases/tag/20.1.0][Github]] release page.

3) Install the APDL-Mode package (You need at least emacs-25.1.)

   Type `M-x package-install-file' and select the downloaded tar
   package.

   # melpa, add the following in your GNU-Emacs init file:
   # (add-to-list 'package-archives
   # 	     '("melpa" . "http://melpa.org/packages/") t)
   # Then do M-x package-list-packages, find apdl-mode and install it.

   That's it.

   # For further installation options please have a
   # look in the [[file:INSTALLATION.org][INSTALLATION]] file.

* Usage
  Please type `M-x apdl' which opens a buffer in APDL-Mode and you can
  inspect the menu bar's `APDL' and `ANSYS' entries.  Please select
  `Describe APDL-Mode' (or type `C-h m'), which will display
  APDL-Mode's help with further guidance.

  You might also check the introductory APDL-Mode tutorial
  ([[file:doc/A-M_introductory_tutorial.org][A-M_introductory_tutorial.org]]) as well.

  The complete [[http://dieter-wilhelm.github.io/apdl-mode][documentation of APDL-Mode]] is available online
* Configuration and Customisation
  Please read the file [[file:apdl-config.org][apdl-config.org]] and adjust the acompanying
  example file [[file:ansys-config.el][apdl-config.el]].
* News
  Please have a look into the [[file:NEWS.org][NEWS]] file
* License
  The GPL 3, please read the [[file:LICENSE.org][LICENSE]] file
* Acknowledgements
  Acknowledgements to Tim Read and Geoff Foster for their ansys-mod.el
  from 1997 which triggered the idea in 2006 to start apdl-mode.

  Parts of APDL-Mode were base on octave-mod.el: Copyright (C) 1997
  Free Software Foundation, Inc.  Author: [[Kurt.Hornik@wu-wien.ac.at][Kurt Hornik]]
  Author: [[jwe@bevo.che.wisc.edu][John Eaton]]

* Further Resources
** Emacs editor resources
   - Emacs [[http://emacs.stackexchange.com][Stackexchange]], the question and answer site.
   - [[http://www.emacswiki.org][EmacsWiki]], an encyclopedia for GNU-Emacs
** Other APDL editor resources
   - A free Windows [[http://apdl.de][APDL editor]], site not maintained since 2011
   - A commercial competitor of apdl-mode: The [[http://www.padtinc.com/pedal][Pedal]] script editor for
     Windows, project disbanded in 2015.
   - Simple APDL syntax highlighting extensions are available for
     various editors, gvim, nedit, ... to name a few, please have a
     look at [[http://ansys.net][ANSYS.net]].
** ANSYS and APDL resources
   - The ANSYS reference manuals
   - The [[http://www.ansys.com][ANSYS homepage]] with the ANSYS Portal and Learning Hub
   - Xansys, an [[http://www.xansys.org][ANSYS online community]] (forum registration is necessary)
   - The [[http://www.padtinc.com/blog/the-focus/][PADT Focus]] site.
   - A general  ANSYS repository [[http://www.ansys.net][ANSYS.net]]
   - [[http://www.auc-ev.de/][AUC]], the ANSYS User Club eV. in Germany

* TODOs
  Please read the [[file:TODO.org][TODO]] file
-----

# The following is for Emacs
# local variables:
# word-wrap: t
# show-trailing-whitespace: t
# indicate-empty-lines: t
# time-stamp-active: t
# time-stamp-format: "%:y-%02m-%02d"
# end:

